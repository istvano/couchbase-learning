{
  "id": "cb",
  "realm": "cb",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS384",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "bcbb4ca7-0586-4465-b993-58fd4ba6d431",
        "name": "default-roles-cb",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "cb",
        "attributes": {}
      },
      {
        "id": "609c5d9e-7e2a-4cb8-89c2-69430048f1eb",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "cb",
        "attributes": {}
      },
      {
        "id": "85e54b4a-740d-45b0-b4c5-4d81034dc0b3",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "cb",
        "attributes": {}
      },
      {
        "name": "admin",
        "description": "Realm role admin"
      },
      {
        "name": "cluster-admin",
        "description": "Realm role cluster-admin"
      }
    ],
    "client": {
      "test-client": [
        {
          "name": "data_reader",
          "description": "Data reader"
        },
        {
          "name": "security_admin",
          "description": "Security admin"
        },
        {
          "name": "bucket-admin",
          "description": "Client role bucket-admin"
        },
        {
          "name": "reader",
          "description": "Client role reader"
        },
        {
          "name": "writer",
          "description": "Client role writer"
        },
        {
          "name": "query-select",
          "description": "Client role query-select"
        },
        {
          "name": "insert",
          "description": "Client role insert"
        },
        {
          "name": "delete",
          "description": "Client role delete"
        },
        {
          "name": "update",
          "description": "Client role update"
        },
        {
          "name": "index",
          "description": "Client role index"
        }
      ],
      "realm-management": [
        {
          "id": "be8bd0cc-72ca-46ac-8508-f5771c36bdec",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "13bf8f0d-90d0-4382-940f-63d6fa983870",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "bb82b5a5-81b0-46e3-a7b2-1be2463b2499",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "9de2fb69-9786-4f27-982d-bfb04a95fd91",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "be84fa59-5684-4d86-a4d0-b769aec1ff70",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "e8c1a888-a5f8-4e99-9d6d-5da78a54a310",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "3fca0b12-5a3d-4369-8f99-42a3d3f090b7",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "9ea91698-80ad-41c8-9de8-0b00a0593714",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "586e3281-ab8f-4f36-a3b4-ef34e9e0fc6b",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "5851b304-67d3-42b9-90eb-9892a3b8eff4",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "a0c3521d-cfbb-47b6-b131-42454a879bcc",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "fd92f835-6fe7-405c-b3c1-a3b75917f303",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "a584f355-561e-4f3a-99cf-edb79750b45d",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "4b132399-8181-4821-8db9-ae0ea28c808f",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "a7239d01-8fe9-4a36-ac39-7b7c2f228738",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "f6952026-3418-48c2-81e7-493a18e2540e",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "702adaf0-6e82-4b1d-b267-a54ea1b6f00f",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "959c126a-b6ba-4d6b-92ef-f81027d5763d",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        },
        {
          "id": "19dd9a1f-2f24-432c-9ef9-f059a4310dc2",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients",
                "view-realm",
                "query-users",
                "create-client",
                "manage-identity-providers",
                "manage-realm",
                "manage-users",
                "view-identity-providers",
                "view-events",
                "manage-authorization",
                "query-groups",
                "view-users",
                "view-clients",
                "impersonation",
                "view-authorization",
                "query-realms",
                "manage-events",
                "manage-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "ddaebd4e-5f50-4ad5-ba11-011b96389b49",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "238b3aa1-4584-4cfc-8c99-27191f52775a",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "e697f398-3d93-4b9d-b1e0-34290bf613f3",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "788a52fb-2d88-4cc3-80cf-f72bfb8893e5",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "b394ae81-45d9-4829-b7e1-e1175ef49eb4",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "114163e3-ae18-4fdf-a52c-1a6e20612bab",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "d1936866-3c81-4679-a058-9a6d16456431",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "752ca5b6-bf78-4fc4-9448-3836d4d7173b",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "3e335826-ed9b-4b24-8147-75e36948d81a",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        },
        {
          "id": "03f38e78-7906-49d5-aded-8690397a7923",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "8024a758-2422-49b4-9135-d95c9e714b91",
          "attributes": {}
        }
      ]
    }
  },
  "users": [
    {
      "username": "cluster-admin",
      "enabled": true,
      "email": "cluster-admin@localhost.com",
      "emailVerified": true,
      "firstName": "Alex",
      "lastName": "Smith",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "update",
          "reader",
          "delete",
          "index"
        ]
      },
      "groups": [
        "/group1"
      ]
    },
    {
      "username": "admin",
      "enabled": true,
      "email": "admin@localhost.com",
      "emailVerified": true,
      "firstName": "Jamie",
      "lastName": "Johnson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "test-client": [
          "writer",
          "insert",
          "bucket-admin",
          "update",
          "delete"
        ]
      },
      "groups": [
        "/group2"
      ]
    },
    {
      "username": "update",
      "enabled": true,
      "email": "update@localhost.com",
      "emailVerified": true,
      "firstName": "Taylor",
      "lastName": "Williams",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "update"
        ]
      },
      "groups": [
        "/group3"
      ]
    },
    {
      "username": "index",
      "enabled": true,
      "email": "index@localhost.com",
      "emailVerified": true,
      "firstName": "Jordan",
      "lastName": "Brown",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "index"
        ]
      },
      "groups": [
        "/group4"
      ]
    },
    {
      "username": "insert",
      "enabled": true,
      "email": "insert@localhost.com",
      "emailVerified": true,
      "firstName": "Casey",
      "lastName": "Jones",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "insert"
        ]
      },
      "groups": [
        "/group5"
      ]
    },
    {
      "username": "bucket-admin",
      "enabled": true,
      "email": "bucket-admin@localhost.com",
      "emailVerified": true,
      "firstName": "Morgan",
      "lastName": "Garcia",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "bucket-admin"
        ]
      },
      "groups": [
        "/group6"
      ]
    },
    {
      "username": "writer",
      "enabled": true,
      "email": "writer@localhost.com",
      "emailVerified": true,
      "firstName": "Drew",
      "lastName": "Miller",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "writer"
        ]
      },
      "groups": [
        "/group7"
      ]
    },
    {
      "username": "reader",
      "enabled": true,
      "email": "reader@localhost.com",
      "emailVerified": true,
      "firstName": "Cameron",
      "lastName": "Wilson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "reader"
        ]
      },
      "groups": [
        "/group9"
      ]
    },
    {
      "username": "user11",
      "enabled": true,
      "email": "user11@localhost.com",
      "emailVerified": true,
      "firstName": "Alex",
      "lastName": "Smith",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "test-client": [
          "insert",
          "reader",
          "query-select"
        ]
      },
      "groups": [
        "/group2",
        "/group6"
      ]
    },
    {
      "username": "user12",
      "enabled": true,
      "email": "user12@localhost.com",
      "emailVerified": true,
      "firstName": "Jamie",
      "lastName": "Johnson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "delete",
          "reader",
          "writer"
        ]
      },
      "groups": [
        "/group3",
        "/group9"
      ]
    },
    {
      "username": "user13",
      "enabled": true,
      "email": "user13@localhost.com",
      "emailVerified": true,
      "firstName": "Taylor",
      "lastName": "Williams",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin",
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "index",
          "insert",
          "bucket-admin",
          "reader"
        ]
      },
      "groups": [
        "/group5",
        "/group1"
      ]
    },
    {
      "username": "user14",
      "enabled": true,
      "email": "user14@localhost.com",
      "emailVerified": true,
      "firstName": "Jordan",
      "lastName": "Brown",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "update",
          "delete",
          "writer"
        ]
      },
      "groups": [
        "/group4",
        "/group7"
      ]
    },
    {
      "username": "user15",
      "enabled": true,
      "email": "user15@localhost.com",
      "emailVerified": true,
      "firstName": "Casey",
      "lastName": "Jones",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "query-select",
          "reader"
        ]
      },
      "groups": [
        "/group6",
        "/group8"
      ]
    },
    {
      "username": "user16",
      "enabled": true,
      "email": "user16@localhost.com",
      "emailVerified": true,
      "firstName": "Morgan",
      "lastName": "Garcia",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "bucket-admin",
          "insert",
          "writer",
          "index"
        ]
      },
      "groups": [
        "/group10",
        "/group2"
      ]
    },
    {
      "username": "user17",
      "enabled": true,
      "email": "user17@localhost.com",
      "emailVerified": true,
      "firstName": "Drew",
      "lastName": "Miller",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "test-client": [
          "reader",
          "delete"
        ]
      },
      "groups": [
        "/group3",
        "/group9"
      ]
    },
    {
      "username": "user18",
      "enabled": true,
      "email": "user18@localhost.com",
      "emailVerified": true,
      "firstName": "Riley",
      "lastName": "Davis",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "index",
          "update",
          "reader",
          "query-select",
          "insert"
        ]
      },
      "groups": [
        "/group1",
        "/group5"
      ]
    },
    {
      "username": "user19",
      "enabled": true,
      "email": "user19@localhost.com",
      "emailVerified": true,
      "firstName": "Cameron",
      "lastName": "Wilson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "bucket-admin",
          "writer",
          "delete",
          "reader"
        ]
      },
      "groups": [
        "/group4",
        "/group7"
      ]
    },
    {
      "username": "user20",
      "enabled": true,
      "email": "user20@localhost.com",
      "emailVerified": true,
      "firstName": "Quinn",
      "lastName": "Taylor",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin",
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "update",
          "reader",
          "index",
          "insert"
        ]
      },
      "groups": [
        "/group6",
        "/group8"
      ]
    },
    {
      "username": "user21",
      "enabled": true,
      "email": "user21@localhost.com",
      "emailVerified": true,
      "firstName": "Alex",
      "lastName": "Smith",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "query-select"
        ]
      },
      "groups": [
        "/group9",
        "/group2"
      ]
    },
    {
      "username": "user22",
      "enabled": true,
      "email": "user22@localhost.com",
      "emailVerified": true,
      "firstName": "Jamie",
      "lastName": "Johnson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "test-client": [
          "index",
          "update",
          "insert",
          "delete",
          "reader"
        ]
      },
      "groups": [
        "/group3",
        "/group5"
      ]
    },
    {
      "username": "user23",
      "enabled": true,
      "email": "user23@localhost.com",
      "emailVerified": true,
      "firstName": "Taylor",
      "lastName": "Williams",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "bucket-admin",
          "query-select",
          "writer"
        ]
      },
      "groups": [
        "/group7",
        "/group1"
      ]
    },
    {
      "username": "user24",
      "enabled": true,
      "email": "user24@localhost.com",
      "emailVerified": true,
      "firstName": "Jordan",
      "lastName": "Brown",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "insert",
          "reader",
          "delete"
        ]
      },
      "groups": [
        "/group4",
        "/group6"
      ]
    },
    {
      "username": "user25",
      "enabled": true,
      "email": "user25@localhost.com",
      "emailVerified": true,
      "firstName": "Casey",
      "lastName": "Jones",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin",
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "update",
          "writer",
          "index",
          "bucket-admin"
        ]
      },
      "groups": [
        "/group8",
        "/group10"
      ]
    },
    {
      "username": "user26",
      "enabled": true,
      "email": "user26@localhost.com",
      "emailVerified": true,
      "firstName": "Morgan",
      "lastName": "Garcia",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "reader",
          "insert",
          "delete"
        ]
      },
      "groups": [
        "/group5",
        "/group9"
      ]
    },
    {
      "username": "user27",
      "enabled": true,
      "email": "user27@localhost.com",
      "emailVerified": true,
      "firstName": "Drew",
      "lastName": "Miller",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "query-select",
          "update",
          "reader"
        ]
      },
      "groups": [
        "/group2",
        "/group7"
      ]
    },
    {
      "username": "user28",
      "enabled": true,
      "email": "user28@localhost.com",
      "emailVerified": true,
      "firstName": "Riley",
      "lastName": "Davis",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "test-client": [
          "bucket-admin",
          "writer",
          "index"
        ]
      },
      "groups": [
        "/group6",
        "/group1"
      ]
    },
    {
      "username": "user29",
      "enabled": true,
      "email": "user29@localhost.com",
      "emailVerified": true,
      "firstName": "Cameron",
      "lastName": "Wilson",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "delete",
          "insert"
        ]
      },
      "groups": [
        "/group3",
        "/group8"
      ]
    },
    {
      "username": "user30",
      "enabled": true,
      "email": "user30@localhost.com",
      "emailVerified": true,
      "firstName": "Quinn",
      "lastName": "Taylor",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "cluster-admin"
      ],
      "clientRoles": {
        "test-client": [
          "reader",
          "update",
          "bucket-admin"
        ]
      },
      "groups": [
        "/group4",
        "/group9"
      ]
    },
    {
      "username": "data_reader_user",
      "enabled": true,
      "email": "data_reader_user@localhost.com",
      "emailVerified": true,
      "firstName": "data_reader_user",
      "lastName": "data_reader_user",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "data_reader"
        ]
      },
      "groups": []
    },
    {
      "username": "security_admin_user",
      "enabled": true,
      "email": "security_admin_user@localhost.com",
      "emailVerified": true,
      "firstName": "security_admin_user",
      "lastName": "security_admin_user",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "security_admin_user"
        ]
      },
      "groups": []
    },
    {
      "username": "combined_user",
      "enabled": true,
      "email": "combined_user@localhost.com",
      "emailVerified": true,
      "firstName": "combined_user",
      "lastName": "combined_user",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
          "data_reader",
          "security_admin_user"
        ]
      },
      "groups": []
    },
    {
      "username": "group_user",
      "enabled": true,
      "email": "group_user@localhost.com",
      "emailVerified": true,
      "firstName": "group_user",
      "lastName": "group_user",
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [],
      "clientRoles": {
        "test-client": [
        ]
      },
      "groups": ["/jwt_data_admins"]
    }
  ],
  "groups": [
    {
      "name": "jwt_data_admins",
      "path": "/jwt_data_admins"
    },
    {
      "name": "group1",
      "path": "/group1"
    },
    {
      "name": "group2",
      "path": "/group2"
    },
    {
      "name": "group3",
      "path": "/group3"
    },
    {
      "name": "group4",
      "path": "/group4"
    },
    {
      "name": "group5",
      "path": "/group5"
    },
    {
      "name": "group6",
      "path": "/group6"
    },
    {
      "name": "group7",
      "path": "/group7"
    },
    {
      "name": "group8",
      "path": "/group8"
    },
    {
      "name": "group9",
      "path": "/group9"
    },
    {
      "name": "group10",
      "path": "/group1/group10"
    }
  ],
  "defaultRole": {
    "id": "bcbb4ca7-0586-4465-b993-58fd4ba6d431",
    "name": "default-roles-cb",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "cb"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "8024a758-2422-49b4-9135-d95c9e714b91",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/cb/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/cb/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7dcd7ea7-6c6f-408e-aef0-29dce8ddcc3e",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/cb/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/cb/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "a2250bb4-58c1-4d2c-84c8-fd68e4d5e711",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ac11f13e-bd5d-417b-abc8-d16454733471",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "238b3aa1-4584-4cfc-8c99-27191f52775a",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8942a12b-08cc-4e00-94b4-fffec07c62ee",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2e1db2f2-5779-48fb-8012-5d9d37b7a82e",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/cb/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/cb/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "8efec7bd-5652-4e9d-b168-054cbd55fb87",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cd3f4357-ac92-4981-98b1-62a52081bd94",
      "clientId": "http://127.0.0.1:8091/saml/metadata",
      "name": "cb-server",
      "description": "",
      "rootUrl": "http://localhost:8091",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8091/*"
      ],
      "webOrigins": [
        "http://localhost:8091"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.server.signature": "true",
        "saml.signing.certificate": "MIICoTCCAYkCBgGJuZO71jANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAljYi1zZXJ2ZXIwHhcNMjMwODAzMDQwNTE0WhcNMzMwODAzMDQwNjU0WjAUMRIwEAYDVQQDDAljYi1zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYnyugw0T6KKkgaUlnsIe5PZZgHGoZJxBNKQSWh0hWcCpOUj03x8NCONaORQ/+sKBlI0g3M0rNCJE95oF7Mil0CMtBc8EaW2cG56IqOVNogdzPJkHHOOoEMqtYNEH5H1654R5Ofny2ckyRze+Y7PYRUEAYHrdhVQchDQ/RElrdMcvnf5aPzp9l08drjzHlvGtSoSBi3VnF7JGLzdBc/eaoJ5MxefxVmYFTn9TQD4T2OYa+QMCtc+DDDEUyLvISYwERPRkk+PA7O4hqlN5DYGTnIQN4awVhWycHe79z/XnVNc2it/QzbjGWGwRRTkp/mkkgVyhCBMrPShQdVNXGSYEnAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADc5HKSvbhdtAwhj2pkML/aZn1cAHSULBv89QIU06wJsnZNRJRG3rWXCXMwnRmS3WHxECGXDp3Pn4eFG5lgnGqeX3P3DNoAAXyX34cTLKGrMWGDPYaA52V/pS0nfTKqk6jxDnr9ykU1RuzxSg/njTl16NlNQ/SZRdjwvBCHyAi9Lv5TF+kcFcIVRBVmXYAiIS2GxRuazF4z/KWNxleuQBFrQUD8HKQz+m/hZ0zZ5mTvJlXF0gfSQeS+8Maye1PzGIeTQrnUr2VinLEgDYxOcMNkbWBnmGryGgOglFsMmKvQ5hqjL8xj/vSasIaK5aFyFYG6V4dbMFCMg5eRVqRnvOBY=",
        "saml.artifact.binding.identifier": "7q1cEQwKfLAGh3GtV2uTXdJuOII=",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "true",
        "saml.authnstatement": "true",
        "saml_name_id_format": "username",
        "saml.signing.private.key": "MIIEogIBAAKCAQEAmJ8roMNE+iipIGlJZ7CHuT2WYBxqGScQTSkElodIVnAqTlI9N8fDQjjWjkUP/rCgZSNINzNKzQiRPeaBezIpdAjLQXPBGltnBueiKjlTaIHczyZBxzjqBDKrWDRB+R9eueEeTn58tnJMkc3vmOz2EVBAGB63YVUHIQ0P0RJa3THL53+Wj86fZdPHa48x5bxrUqEgYt1ZxeyRi83QXP3mqCeTMXn8VZmBU5/U0A+E9jmGvkDArXPgwwxFMi7yEmMBET0ZJPjwOzuIapTeQ2Bk5yEDeGsFYVsnB3u/c/151TXNorf0M24xlhsEUU5Kf5pJIFcoQgTKz0oUHVTVxkmBJwIDAQABAoIBABJQk4M0u5vLclQ93j2vrPHZRqjc8Ax5qBaiU/ceX9tjlWgVrVv6wF87g9/JwNwe5PiODdX19UV6gDdt6F7Yy6mtfnqpweQAUPI+rLKlc3FomA9Rt3YJSefcDrzEdKBJF+x1a9Yejqe0OqUKkfSHhxXXzAE4+meXNQZN03aS3c2KQzeLfEbEaP2eAWyoSpbS9iwKUcDTr+7QPe5j4J8sWxOh7GGO1y1vru/f56VC0TDgyk/ehW9USJ//qrd/CXD1UATomyz/A4/VDiknQ5TDIyi5SwRsW7Kvot0rAqIRSDcr+2Aiz9dNlbB4P0x5Oc5nP/I4NRstLlUYlX6aSo2SzyUCgYEA0e0utvfm3Kt3pqdtkfW9r9MhZ+3Uf6k80rVfh93YSJiv4NJr1PLPa3WuLI+Kzr8Az7Cbhxnl7k9jdv6diJLRvqbuGKcVp/2HlyttCuTmSb7z450lNEkZ7u6TIdyGA7451/BWYDhCDl3IEnDkA+1b9Tui60xaOLsiteBDXkOZ4ZUCgYEAuh5LecflbMJNciv2jSKkreQ6s7+tPnvtEHCEzu6afCBDmRAxROJ5/znCmoa3cdGpd3mwUKTVBkAGAlwR5O7iffXzI6j+8u3RbyHYdTakr5AhahUzroYWn8Nu1MvUBzBZ/8BW7zwuCsWuJRrxD8h9CvJjC2NB3nOQgYjOTvCNIMsCgYBIw2l5yhufSV/DyCzWdtM06n2dxHXvef23G17tfRvGrgXoa4cs3KzAlp20nFyEpPfnBVQjU/q6y5GyYTbBbAJ/juTgbqm2/M3OvCKjsAuSbDmlH4cRxHTUuKUPC5z4Fyt9ibSmzVk4GZGLss2V/uPs8Krb3C85ksPJPt6bAduIsQKBgGSEphjAiD0j93XZHpB9DFnKMJYRyHw9q/w7+M5V+WNefYO2RhXBB0h7pomUhpDXPmKDe2EilNaKT3SIyzVMe1CyO72fsQn8vSb7LY+okmsrOZC0oLP6QU/J2hrddsbnK0RAWfNdGjTBLNtnYJg4nKgD3tAwrEt7OKls/JePvXjfAoGAa+8BqZdw4u7LiIavTcO5TiwtGtaEkEf0PhZMdlXUFb4CISSM0MwKQjA9LkHMQdPbsgYWArbrL6ZEalDWpbOfq93ZUj5cHz5A7qxFV/uciC7HzU1r6+k1CEM5+xcIleU23wr0yUmppTkPcApIDPpueHydm7LmIrQ9n+z6Zk/S7UI=",
        "saml.allow.ecp.flow": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "01836b04-c3ae-21ac-163b-b1c81539f611",
      "clientId": "test-client",
      "name": "Test Client",
      "rootUrl": "",
      "baseUrl": "http://127.0.0.1:8091",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://127.0.0.1:8091/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "basic",
        "roles",
        "profile",
        "email",
        "groups"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt",
        "organization"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "3a0c5685-a36d-4bf6-8542-39f2cda61070",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cb4f8a24-7cef-4ee8-84fb-4f11502c38b9",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "575bc27e-b9bc-4938-8544-be028d7541a9",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "29b1ec82-1d26-4581-bab7-517456594cee",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b43f0c1c-b1b3-4431-9775-bcaece175185",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a0940a31-b579-448a-87d7-e83f61391ab4",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "5543bd0a-dfef-4859-8928-031b18841301",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c03b406c-007c-4e4a-82f1-20bf316cccd9",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "871aea0a-1369-4f9a-82c1-845e310f3e2b",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "341a80b5-eb2f-47b2-9fce-6a933e5dfb1a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "807b5aab-016b-4a80-9e01-f341601cf835",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c7cb870-2003-4585-90d9-f142488299aa",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b7169590-896d-4365-8258-fee657c54f16",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5637d202-3393-497a-be95-db73695ae385",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "aada8c32-f8d6-43cd-b677-d503b8c44b51",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "7862a8c5-34da-49c6-89f0-e4c30c2b7b21",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "1d7e2bd1-0e33-4cca-b279-6926366de91a",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "b4b810b1-4ff4-4c74-a61f-1c4f8bae5923",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "6488fae5-9728-44f8-a4e4-92920a363795",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5ff41cf7-37c3-49a6-b0e7-ae23504babf9",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5064ec3f-a930-4a2c-a941-88a2ed0d0179",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b22449cf-7529-4b8f-bd7f-f2b76bede158",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "aefcfcd6-d5eb-4520-b6ea-cebe3ae2cf10",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "07e3061f-a4aa-44a7-8373-7ad25e88bff4",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "a30d5a35-e453-47fe-81be-32193486ddd2",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "92ed92a8-6995-4153-a3fa-35c56298cb03",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d3aac0b7-f42d-41be-bd54-33d2535f1501",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "9f0e3373-f84d-4148-a6e5-8f52fccac693",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "bb6fee48-2614-4816-be49-c01157d9c2b5",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "174fea88-ec46-4371-a182-01d5d89251d1",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "bf383561-d900-4626-a228-16c9ea393722",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "44756f0b-2156-449e-ac39-1ad620c7b7ea",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d923fd4e-ce12-4a4a-9b6c-dd27443e8b00",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "2498a232-f626-448e-9411-5a8eca414998",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac34dfd3-de5f-47df-8361-0fa154720f5a",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "01858485-903d-495e-90e9-453b7de0d971",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "8a75d874-9ffc-4814-96fe-6b3fa56cb14e",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ffe95255-3dc3-4c44-af33-3ab7366e9c18",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a4c4c8f9-1126-420a-887a-0e427bf0c499",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "60ad59dc-64ad-4694-a5cf-cdf4dde2466e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "756e1f35-1bfe-4d95-a320-b6ff602ce8e8",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3406fb33-b0e6-452b-9920-ef2ea6775afd",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "34fa868c-ea23-40c1-bc68-69bb216bdbeb",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8edd12b0-17bb-4ea9-be27-8b50af0c2242",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cac005fa-796f-4dc5-acac-746843cf3b2b",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d15e3c4b-27ab-495e-91b4-b7dca89dfc08",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b531a2d0-8768-4d1c-9851-d407d51a22ec",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d9afa802-f6c9-4c3e-ad6b-ce21b820728f",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "795084d5-3d91-4d9d-810d-0e78f88b045c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "e49de427-fc53-45cc-bd2a-75fe21247410",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "020398e6-baf0-4599-b0a4-e474c01da8f6",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "27723a71-9be0-42ec-a34e-3f28ae196c76",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "1ab7dc49-4199-478b-b84f-dcbd7894eae7",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "2c3bb7cd-1f3f-4b3f-ae26-f026d0afd68f",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "cc0800eb-6ede-401f-bbca-c84cab5ab53e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "186cb0be-9c05-42fe-91a0-d25cc17c4206",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f1ee01a8-163d-45eb-8017-2b78585ec817",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "8421614b-dc35-40ee-af06-afa6308ba78f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d15a072d-25a3-4796-8d15-384fe80553d6",
        "name": "ecdh-generated",
        "providerId": "ecdh-generated",
        "subComponents": {},
        "config": {
          "ecGenerateCertificate": [
            "true"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "ecdhAlgorithm": [
            "ECDH-ES"
          ],
          "ecdhEllipticCurveKey": [
            "P-384"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "id": "80b93654-91df-49cb-91aa-d7e0b03e20bd",
        "name": "ecdsa-generated",
        "providerId": "ecdsa-generated",
        "subComponents": {},
        "config": {
          "ecGenerateCertificate": [
            "true"
          ],
          "ecdsaEllipticCurveKey": [
            "P-384"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "id": "90a8460c-e4d4-4ea9-bd4b-2ff152076805",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "b1327dd0-1e74-42c2-bdff-dc3b1946427b",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "06c1ee92-fe59-45e1-a99c-525f2dc3bfe7",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "100d9251-0d4c-4ad0-b9b9-06c1e29b2ec9",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "128c79e8-11e3-440d-abbc-119daa60fd93",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "81d9c238-5075-40b4-82d8-316c7f9d148e",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7baa375b-ccc3-49c6-94e2-276495483280",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "233bf5be-8de4-4208-a74c-f788c79d740e",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "59e35b0d-8dde-40ea-9a15-85d7d97e19f5",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "597989ab-411b-4a11-b1a9-68f100f9eff4",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7c08f6a1-9789-484a-80a0-6d1f8d3324d3",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4c3954a0-0756-4adb-92e1-a7db3ac01173",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "20961801-2f1d-4793-8648-bc329f6f01fa",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "74ff0866-8232-4dc5-93d0-062952a45eed",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b183dcb5-3f5c-4eba-8d90-3030d0e49a46",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7d8356ef-2553-4df8-b278-cc95752321e6",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c4c62805-66f2-4d31-b91d-76c59484ad96",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "53238b7e-5c11-48fa-a2a9-27c02007e3e9",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "704bef54-2029-4123-ab95-7f40fa772f92",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9843bb84-2927-4fed-8599-a604c6be671b",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "18fb5252-8f85-4a88-80ae-de726b92e58b",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fee73f5a-7f5a-4c5e-a2b5-b9e920a4f375",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b9fa27ce-6bf5-4c74-bc5e-c746caeb341f",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "6b5f9567-5549-4cd0-9235-1d937d8cbf87",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "19a3310e-47ca-4c25-8d70-dee1ad294782",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.verify-email": "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.execute-actions": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "shortVerificationUri": "",
    "actionTokenGeneratedByUserLifespan.reset-credentials": ""
  },
  "keycloakVersion": "26.2.1",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}