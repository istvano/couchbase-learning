#cloud-config
package_update: true
package_upgrade: true

packages:
  - git
  - ca-certificates
  - curl
  - bat
  - gnupg
  - lsb-release
  - ufw
  - fail2ban
  - unattended-upgrades
  - apt-transport-https
  - software-properties-common
  - gnupg-agent
  - certbot
  - make

write_files:
  - path: /etc/keycloak-domain.txt
    content: |
      ec2-54-176-164-30.us-west-1.compute.amazonaws.com

runcmd:
  - echo "[*] Enabling automatic security updates"
  - dpkg-reconfigure --priority=low unattended-upgrades

  - echo "[*] Setting up UFW firewall rules"
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow OpenSSH
  - ufw allow 443/tcp
  - ufw allow 80/tcp
  - ufw --force enable

  - echo "[*] Installing Docker from Docker's official repo"
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - chmod a+r /etc/apt/keyrings/docker.gpg
  - >
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg]
    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt update -y
  - apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker ubuntu

  - echo "[*] Waiting for DNS to propagate before requesting cert..."
  - sleep 30  # optional DNS propagation delay

  - export DOMAIN=$(cat /etc/keycloak-domain.txt | tr -d '[:space:]')

  - echo "[*] Temporarily stopping services on port 80/443 for certbot standalone"
  - fuser -k 80/tcp || true
  - fuser -k 443/tcp || true

  - echo "[*] Requesting Let's Encrypt certificate for $DOMAIN"
  - certbot certonly --standalone --non-interactive --agree-tos --register-unsafely-without-email -d $DOMAIN

  - echo "[*] Certificate obtained. You can now configure Keycloak to use:"
  - echo "  - /etc/letsencrypt/live/$DOMAIN/fullchain.pem"
  - echo "  - /etc/letsencrypt/live/$DOMAIN/privkey.pem"


final_message: "EC2 instance setup complete. Docker and security tools are installed. Reboot if needed."
